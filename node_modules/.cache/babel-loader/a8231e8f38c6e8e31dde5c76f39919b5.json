{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asad5\\\\OneDrive\\\\Desktop\\\\labelbox-react-interface\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport './App.css';\nimport { LabelingUI } from './LabelingUI';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\nimport red from '@material-ui/core/colors/red';\nexport const primary = '#5495e3';\nexport const secondary = '#c1c1c1';\nexport const error = red.A700;\nexport const textColor = '#5b5b5b';\nexport const theme = createMuiTheme({\n  palette: {\n    primary: { ...lightBlue,\n      A700: primary\n    }\n  }\n}); // label is what will be assigned to overall image\n\nconst defaultState = {\n  data: undefined,\n  previousAsset: undefined,\n  loading: true,\n  label: {\n    \"MES\": \"000000000\",\n    \"SUBEND\": \"000000000\",\n    \"SUBEPI\": \"000000000\",\n    \"TUB\": \"000000000\"\n  },\n  selectedCond: \"\",\n  updateKey: Math.random(),\n  UIUpdated: true\n};\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = defaultState;\n\n    this.handleInputChange = e => {\n      this.setState({\n        selectedCond: e.currentTarget.value\n      });\n    };\n\n    this.handlePreviousClick = () => {\n      window.Labelbox.setLabelAsCurrentAsset(this.state.previousAsset);\n      this.setState({\n        updateKey: Math.random(),\n        UIUpdated: false\n      }); // label: JSON.parse(this.state.previousAsset.label)\n    };\n\n    this.updatedUI = () => {\n      this.setState({\n        UIUpdated: true,\n        updateKey: Math.random()\n      });\n    };\n  }\n\n  next(submission) {\n    this.setState(defaultState);\n\n    const getNext = () => {\n      window.Labelbox.fetchNextAssetToLabel();\n    };\n\n    if (!submission) {\n      getNext();\n    } else if (submission.label) {\n      window.Labelbox.setLabelForAsset(JSON.stringify(submission.label || '')).then(getNext);\n    } else if (submission.skip) {\n      window.Labelbox.skip().then(getNext);\n    }\n\n    this.setState({\n      UIUpdated: false,\n      updateKey: Math.random()\n    });\n  }\n\n  componentWillMount() {\n    console.log(\"Mounting...\");\n    window.Labelbox.currentAsset().subscribe(asset => {\n      if (!asset) {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      this.setState({\n        data: asset.data,\n        loading: false,\n        previousAsset: asset.previous\n      });\n\n      if (asset.label !== undefined && asset.label !== \"Skip\") {\n        //console.log(asset.label);\n        this.setState({\n          label: JSON.parse(asset.label),\n          UIUpdated: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MuiThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, this.state.loading && /*#__PURE__*/React.createElement(LinearProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 36\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LabelingFrame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LeftBarContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InstructionsBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        fontSize: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, \"Instructions:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"1. If the image cannot be labeled (e.g. no deposits, no tissue, noise, inconclusive, etc.) please select the \\\"\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"red\",\n        textDecoration: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 35\n      }\n    }, \"Skip\"), \"\\\" button.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"2. Otherwise, select label category from \\\"Labels\\\" list below.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"3. Once selected, double click tiles that are positive for the selected label. Feedback will appear on the right panel. To deselect a tile, double click it again.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"4. Repeat process for all labels applicable to the sample.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, \"5. Once done, press \\\"\", /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"blue\",\n        textDecoration: \"underline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 44\n      }\n    }, \"Submit\"), \"\\\" to move to the next sample.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"*Scroll up and down over image or use controls to zoom in/out. Click and drag to pan around image.\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"*Warning: Moving mouse while double-clicking leads to weird behavior\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"labelSelectorContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Label List:\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"label1\",\n      type: \"radio\",\n      value: \"TA+IF+Infl+-\",\n      checked: this.state.selectedCond === \"TA+IF+Infl+-\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }), \"Cortex:  tubular atrophy  \\u221A \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 Interstitial Fibrosis \\u221A \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0(\\xB1 infiltrates)\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"label2\",\n      type: \"radio\",\n      value: \"TA+IF-Infl+-\",\n      checked: this.state.selectedCond === \"TA+IF-Infl+-\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }), \"Cortex:  tubular atrophy  \\u221A \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 interstitial fibrosis X \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 49\n      }\n    }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0(\\xB1 infiltrates)\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"label3\",\n      type: \"radio\",\n      value: \"TA-IF+Infl+-\",\n      checked: this.state.selectedCond === \"TA-IF+Infl+-\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }), \"Cortex:  tubular atrophy  X \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 interstitial fibrosis \\u221A \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 49\n      }\n    }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0(\\xB1 infiltrates)\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"label4\",\n      type: \"radio\",\n      value: \"TA-IF-Infl+\",\n      checked: this.state.selectedCond === \"TA-IF-Infl+\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }), \"Cortex:  tubular atrophy  X \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 interstitial fibrosis X \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 49\n      }\n    }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0(With infiltrates)\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"label5\",\n      type: \"radio\",\n      value: \"TA-IF-Infl-\",\n      checked: this.state.selectedCond === \"TA-IF-Infl-\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }), \"Cortex:  tubular atrophy  X \\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0 interstitial fibrosis X \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 49\n      }\n    }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0(No infiltrates)\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ButtonBar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"PreviousButton\",\n      variant: \"contained\",\n      onClick: this.handlePreviousClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 19\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"SkipButton\",\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => this.next({\n        skip: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 19\n      }\n    }, \"Skip\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"SubmitButton\",\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: !this.state.label,\n      onClick: () => this.next({\n        label: this.state.label\n      })\n      /* console.log(JSON.stringify(this.state.label)) */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }, \"Submit\"))), /*#__PURE__*/React.createElement(LabelingUI, {\n      key: this.state.updateKey,\n      selectedCondition: this.state.selectedCond,\n      label: this.state.label,\n      data: this.state.data,\n      onLabelUpdate: label => this.setState({ ...this.state,\n        label\n      }),\n      UIUpdated: this.state.UIUpdated,\n      onUIUpdated: this.updatedUI,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/asad5/OneDrive/Desktop/labelbox-react-interface/src/App.js"],"names":["React","Component","Button","RadioGroup","Radio","FormLabel","FormControl","FormControlLabel","LabelingUI","LinearProgress","createMuiTheme","MuiThemeProvider","lightBlue","red","primary","secondary","error","A700","textColor","theme","palette","defaultState","data","undefined","previousAsset","loading","label","selectedCond","updateKey","Math","random","UIUpdated","App","state","handleInputChange","e","setState","currentTarget","value","handlePreviousClick","window","Labelbox","setLabelAsCurrentAsset","updatedUI","next","submission","getNext","fetchNextAssetToLabel","setLabelForAsset","JSON","stringify","then","skip","componentWillMount","console","log","currentAsset","subscribe","asset","previous","parse","render","fontSize","color","textDecoration"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport './App.css';\r\nimport { LabelingUI } from './LabelingUI';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nexport const primary = '#5495e3';\r\nexport const secondary = '#c1c1c1';\r\nexport const error = red.A700;\r\nexport const textColor = '#5b5b5b';\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      ...lightBlue,\r\n      A700: primary\r\n    }\r\n  }\r\n});\r\n// label is what will be assigned to overall image\r\nconst defaultState = {data: undefined, previousAsset: undefined, loading: true, \r\n                      label: { \"MES\": \"000000000\", \"SUBEND\": \"000000000\", \"SUBEPI\": \"000000000\", \"TUB\": \"000000000\" }, \r\n                      selectedCond: \"\", updateKey: Math.random(), UIUpdated: true,\r\n};\r\n\r\nclass App extends Component {\r\n  state = defaultState;\r\n\r\n  next(submission){\r\n    this.setState(defaultState);\r\n    const getNext = () => {\r\n      window.Labelbox.fetchNextAssetToLabel();\r\n    };\r\n    if (!submission) {\r\n      getNext();\r\n    } else if (submission.label) {\r\n      window.Labelbox.setLabelForAsset(JSON.stringify(submission.label || '')).then(getNext);\r\n    } else if (submission.skip) {\r\n      window.Labelbox.skip().then(getNext);\r\n    }\r\n    this.setState({ UIUpdated: false, updateKey: Math.random() });\r\n  }\r\n\r\n  componentWillMount(){\r\n    console.log(\"Mounting...\");\r\n    window.Labelbox.currentAsset().subscribe((asset) => {\r\n      if (!asset){\r\n        this.setState({loading: true});\r\n        return;\r\n      }\r\n\r\n      this.setState({data: asset.data, loading: false, previousAsset: asset.previous});\r\n      if (asset.label !== undefined && asset.label !== \"Skip\") {\r\n        //console.log(asset.label);\r\n        this.setState({ label: JSON.parse(asset.label), UIUpdated: false });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ selectedCond: e.currentTarget.value });\r\n  }\r\n\r\n  handlePreviousClick = () => {\r\n    window.Labelbox.setLabelAsCurrentAsset(this.state.previousAsset);\r\n    this.setState({ updateKey: Math.random(), UIUpdated: false });\r\n    // label: JSON.parse(this.state.previousAsset.label)\r\n  }\r\n\r\n  updatedUI = () => {\r\n    this.setState({ UIUpdated: true, updateKey: Math.random() });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <div className=\"Holder\" >\r\n            {this.state.loading && <LinearProgress/>}\r\n            <div className={\"LabelingFrame\"}>\r\n              <div className=\"LeftBarContainer\" >\r\n                <div className={\"InstructionsBar\"}>\r\n                  <div>\r\n                    <p style={{fontSize: 20}} >Instructions:</p>\r\n                    <p>\r\n                      1. If the image cannot be labeled (e.g. no deposits, no tissue, noise, inconclusive, etc.) please \r\n                      select the \"<span style={{color: \"red\", textDecoration: \"underline\"}} >Skip</span>\" button.\r\n                    </p>\r\n                    <p>\r\n                      2. Otherwise, select label category from \"Labels\" list below.\r\n                    </p>\r\n                    <p>\r\n                      3. Once selected, double click tiles that are positive for the selected label. Feedback will appear on the right panel. \r\n                      To deselect a tile, double click it again.\r\n                    </p>\r\n                    <p>\r\n                      4. Repeat process for all labels applicable to the sample.\r\n                    </p>\r\n                    <p>\r\n                      5. Once done, press \"<span style={{color: \"blue\", textDecoration: \"underline\"}} >Submit</span>\" to move to the\r\n                      next sample.\r\n                    </p>\r\n                    <p>\r\n                      *Scroll up and down over image or use controls to zoom in/out. Click and drag to\r\n                      pan around image.\r\n                    </p>\r\n                    <p className=\"warning\" >\r\n                      *Warning: Moving mouse while double-clicking leads to weird behavior\r\n                    </p>\r\n                  </div>\r\n\r\n                  <div className=\"labelSelectorContainer\" >\r\n                    <p>Label List:</p>\r\n                    <form>\r\n                      <label>\r\n                        <input\r\n                          name=\"label1\"\r\n                          type=\"radio\"\r\n                          value=\"TA+IF+Infl+-\"\r\n                          checked={this.state.selectedCond === \"TA+IF+Infl+-\"}\r\n                          onChange={this.handleInputChange} />\r\n                        Cortex:  tubular atrophy  √ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \r\n                        Interstitial Fibrosis √ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(± infiltrates)\r\n                      </label>\r\n                      <br />\r\n                      <label>\r\n                        <input\r\n                          name=\"label2\"\r\n                          type=\"radio\"\r\n                          value=\"TA+IF-Infl+-\"\r\n                          checked={this.state.selectedCond === \"TA+IF-Infl+-\"}\r\n                          onChange={this.handleInputChange} />\r\n                        Cortex:  tubular atrophy  √ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        interstitial fibrosis X <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(± infiltrates) \r\n                      </label>\r\n                      <br />\r\n                      <label>\r\n                        <input\r\n                          name=\"label3\"\r\n                          type=\"radio\"\r\n                          value=\"TA-IF+Infl+-\"\r\n                          checked={this.state.selectedCond === \"TA-IF+Infl+-\"}\r\n                          onChange={this.handleInputChange} />\r\n                        Cortex:  tubular atrophy  X &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        interstitial fibrosis √ <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(± infiltrates) \r\n                      </label>\r\n                      <br />\r\n                      <label>\r\n                        <input\r\n                          name=\"label4\"\r\n                          type=\"radio\"\r\n                          value=\"TA-IF-Infl+\"\r\n                          checked={this.state.selectedCond === \"TA-IF-Infl+\"}\r\n                          onChange={this.handleInputChange} />\r\n                        Cortex:  tubular atrophy  X &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        interstitial fibrosis X <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(With infiltrates) \r\n                      </label>\r\n                      <br />\r\n                      <label>\r\n                        <input\r\n                          name=\"label5\"\r\n                          type=\"radio\"\r\n                          value=\"TA-IF-Infl-\"\r\n                          checked={this.state.selectedCond === \"TA-IF-Infl-\"}\r\n                          onChange={this.handleInputChange} />\r\n                        Cortex:  tubular atrophy  X &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                        interstitial fibrosis X <br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(No infiltrates) \r\n                      </label>\r\n                    </form>\r\n                  </div>\r\n\r\n                  {/* <div className=\"labelSelectorContainer\" > \r\n                    <FormControl component=\"fieldset\" required>\r\n                      <FormLabel component=\"legend\">Labels:</FormLabel>\r\n                      <RadioGroup\r\n                        aria-label=\"gender\"\r\n                        name=\"gender1\"\r\n                        value={this.state.selectedCond}\r\n                        onChange={(e) => this.setState({ selectedCond: e.target.value })}\r\n                      >\r\n                        <FormControlLabel value=\"Mesangial\" control={<Radio color=\"primary\"/>} label=\"No Cortex (White space or other tissue)\" />\r\n                        <FormControlLabel value=\"Subendothelial\" control={<Radio color=\"primary\"/>} label=\"Positive for Tubular Atrophy Cortex, Positive for Interstitial Fibrosis (with or without infiltrates)\" />\r\n                        <FormControlLabel value=\"Subepithelial\" control={<Radio color=\"primary\"/>} label=\"Positive for Tubular Atrophy Cortex, Negative for Interstitial Fibrosis (with or without infiltrates)\" />\r\n                        <FormControlLabel value=\"Tubuloreticular\" control={<Radio color=\"primary\"/>} label=\"Negative for Tubular Atrophy Cortex, Positive for Interstitial Fibrosis (with or without infiltrates)\" />\r\n                        <FormControlLabel value=\"Tubuloreticular\" control={<Radio color=\"primary\"/>} label=\"Negative for Tubular Atrophy Cortex, Negative for Interstitial Fibrosis (with infiltrates)\" />\r\n                        <FormControlLabel value=\"Tubuloreticular\" control={<Radio color=\"primary\"/>} label=\"Negative for Tubular Atrophy Cortex, Negative for Interstitial Fibrosis (no infiltrates)\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </div>*/}\r\n                </div>\r\n                <div className={\"ButtonBar\"}>\r\n                  <Button  \r\n                    className=\"PreviousButton\"\r\n                    variant=\"contained\"\r\n                    onClick={this.handlePreviousClick}\r\n                  >\r\n                    Previous\r\n                  </Button>\r\n                  <Button \r\n                    className=\"SkipButton\"\r\n                    variant=\"contained\" \r\n                    color=\"secondary\"\r\n                    onClick={() => this.next({skip: true})}\r\n                  >\r\n                    Skip\r\n                  </Button>\r\n                  <Button\r\n                    className=\"SubmitButton\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disabled={!this.state.label}\r\n                    onClick={() => this.next({label: this.state.label})} /* console.log(JSON.stringify(this.state.label)) */\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n              \r\n              <LabelingUI \r\n                key={this.state.updateKey} \r\n                selectedCondition={this.state.selectedCond} \r\n                label={this.state.label} \r\n                data={this.state.data} \r\n                onLabelUpdate={(label) => this.setState({...this.state, label})} \r\n                UIUpdated={this.state.UIUpdated}\r\n                onUIUpdated={this.updatedUI}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}